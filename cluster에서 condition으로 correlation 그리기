draw_condition_correlation_plot_ver2 <- function(input_seuratobj, cluster= NULL, top_n= 10 ) {
  DefaultAssay(input_seuratobj) <- "RNA"
  subset_cluster <- subset(input_seuratobj, idents = cluster) # 보고 싶은 클러스터로 subset
  
  if ("group_id" %in% colnames(subset_cluster@meta.data)){
    Idents(subset_cluster) <- "group_id" # group_id로 ident 덮어쓰기(H인지, L인지)
  } else {
    Idents(subset_cluster) <- subset_cluster@active.ident
  } # group_id로 ident 덮어쓰기(H인지, L인지)
  
  diff_condition_marker <<- FindMarkers(subset_cluster, ident.1 = levels(Idents(subset_cluster))[1], ident.2 = levels(Idents(subset_cluster))[2])
  H_enriched_top10 <- diff_condition_marker %>% top_n(n = 10, wt = avg_logFC) # 표시할 유전자 고르기
  L_enriched_top10 <- diff_condition_marker %>% top_n(n = 10, wt = -avg_logFC) # 표시할 유전자 고르기
  
  subset_cluster <- as.data.frame(log1p(AverageExpression(subset_cluster, verbose = FALSE)$RNA))
  subset_cluster$gene <- rownames(subset_cluster)
  
  df_mark_H = subset(subset_cluster, subset_cluster[['gene']] %in% rownames(H_enriched_top10))
  df_mark_L = subset(subset_cluster, subset_cluster[['gene']] %in% rownames(L_enriched_top10))
  
  #여기서부터 플롯 그리기
  p1 <- ggplot(subset_cluster, aes_string(names(subset_cluster)[1], names(subset_cluster)[2])) + geom_point(color="gray")
  p1 <- LabelPoints(plot = p1, points = rownames(H_enriched_top10), repel = TRUE)
  p1 <- LabelPoints(plot = p1, points = rownames(L_enriched_top10), repel = TRUE)
  
  p1 <- p1 + geom_point(data= df_mark_H, aes_string(names(df_mark_H)[1], names(df_mark_H)[2]), color= "darkblue")
  p1 <- p1 + geom_point(data= df_mark_L, aes_string(names(df_mark_L)[1], names(df_mark_L)[2]), color= "darkred")
  p1 <- p1 + xlab(paste('log1p(Avg.expression(' , names(df_mark_H)[1] , '))')) + ylab(paste('log1p(Avg.expression(' , names(df_mark_H)[2] , '))')) + theme(legend.position="none")
  p_out <<- p1 + ggtitle(paste('cluster', cluster))
  p_out
}

#for example, 함수에서 알아서 active,ident인지, group_id인지 보고, 조건도 맞춰서 넣음.
draw_condition_correlation_plot_ver2(input_seuratobj=Epi.integrated.F, cluster = "1", top_n=10)

#한번에 여러개 반복문으로 그리려면,
plist <- list()  #플롯들을 저장할 리스트
markerlist <- list() #마커들을 저장할 리스트
for(i in 0:(length(levels(Idents(Epi.integrated.F)))-1)){
  draw_condition_correlation_plot_ver2(Epi.integrated.F, cluster = i)
  plist[[i+1]] <- p_out
  markerlist[[i+1]] <- diff_condition_marker
}
pdf("test.pdf") #플롯들 pdf로 한번에 저장
plist
dev.off() 
